	const [isLoading, setIsLoading] = useState(true);
	const initialState = [];
  const [ favs, setFavs ] = useState([]);
  const [ favCoins, setFavCoins ] = useState([]);
	const [ coins, setCoins ] = useState([]);
	const [ search, setSearch ] = useState('');
	const [ refreshing, setRefreshing ] = useState(false)
	let uid = '';

	const resetState = () => {
    setFavs([]);
		setFavCoins([]);
  };

	const loadData = async () => {
		const res: any = await fetch('https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=100&page=1&sparkline=false')
		const data: any = await res.json();
		setCoins(data);
	}

	const readFavs = async () => {
		uid = await AsyncStorage.getItem('uid');
		const q = query(collection(database, "favs"), where("uid", "==", uid));
		const querySnapshot = await getDocs(q);
		resetState();
		querySnapshot.forEach((doc) => {
			setFavs(favs => [...favs, doc.data().coin]);
	})
	}

	const filter = () => {
		filteredCoins = [];
		coins.filter((coin) =>{
			for (let i = 0; i < favs.length; i++) {
				if(favs[i].name === coin.name)
				{
					filteredCoins.push(coin)
				}
			}
		} )
		setFavCoins(filteredCoins);
	}

	useFocusEffect(
		React.useCallback(() => {
			readFavs();
			filter();
		}, [])
	);

	useEffect(() => {
		filter();
	}, [favs]);

console.log(filteredCoins.length)